version: '3.1'

networks:
  cliente_network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:

services:
  app:
    build:
      context: ./cliente-api
      dockerfile: Dockerfile
    ports:
      - "80:8080"
    container_name: cliente-api
#    entrypoint: dockerize -wait tcp://cliente_db:3306 -timeout 40s docker-entrypoint.sh
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://cliente_db:3306/cliente
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    tty: true
    depends_on:
      -   cliente_db
    networks:
      - cliente_network

  cliente_db:
    image: mysql:latest
    command: --innodb-use-native-aio=0
    container_name: cliente_db
    restart: always
    tty: true
    volumes:
      - ./mysql_data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=cliente
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - 3306:3306
    networks:
      - cliente_network

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    volumes:
#      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus_data
#    networks:
#      - cliente_network
#    ports:
#      - 9090:9090
#
#  grafana:
#    image: grafana/grafana:latest
#    ports:
#      - 3000:3000
#    networks:
#      - cliente_network

